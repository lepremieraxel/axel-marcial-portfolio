@import url('satoshi.css');
@import url('cabinet-grotesk.css');

/* RESET */
*, ::before, ::after{
  box-sizing: border-box;
  padding: 0;
  margin: 0;
  scroll-behavior: smooth;
}

:root{
  --red: #FF8B8F;
  --orange: #FABD77;
  --yellow: #FFDA76;
  --green: #AEDA68;
  --blue: #5EA8D6;
  --purple: #9782B4;
  --br-30: 20pt;
}

*::selection{
  background-color: var(--orange);
}

body{
  font-family: 'Satoshi-Variable';
}
a canvas{
  display: flex;
  align-items: center;
  justify-content: center;
  position: relative;
}
canvas{
  width: 100%;
  max-width: 500px;
  height: 100%;
  position: absolute;
  top: 0;
  left: 0;
}

header{
  background: white;
  display: flex;
  justify-content: left;
  align-items: center;
  justify-content: space-between;
  padding: 50px 180px;
  position: sticky;
  top: 0;
  z-index: 10;
  transition: all .3s ease;
  font-family: 'CabinetGrotesk-Variable';
}
.scrolled-header{
  padding: 20px 180px;
  box-shadow: 0 9px 30px rgba(0,0,0,0.3);
}
.scrolled-header #header-logo{
  width: 75px;
}
.scrolled-header h1{
  font-size: 2.5em;
}
#header-logo{
  width: 150px;
  transition: all .3s ease;
}
#header-logo polygon:nth-child(2){
  fill: var(--blue);
  animation: logoColor2 15s linear infinite;
}
#header-logo polygon:nth-child(4){
  fill: var(--red);
  animation: logoColor4 15s linear infinite;
}
header h1{
  text-transform: uppercase;
  font-weight: 500;
  font-size: 3.5em;
  transition: all .3s ease;
  overflow: hidden;
  position: relative;
  top: 15px;
}
header a{
  text-decoration: none;
  color: black;
}
header h1::after{
  content: "";
  display: block;
  position: relative;
  top: -30px;
  left: 0;
  background: var(--yellow);
  height: 30px;
  width: 100%;
  transform: translateX(102%);
  transition: transform .3s ease-out;
}
header h1:hover::after{
  animation: navHoverAnimate .4s linear;
  transform: translateX(0);
}
header h1 span{
  font-weight: 700;
}
#h_group{
  display: flex;
  align-items: center;
  gap: 40px;
}
header nav{
  display: flex;
  gap: 20px;
}
header nav a{
  text-decoration: none;
  text-transform: uppercase;
  color: black;
  font-weight: 500;
  font-size: 2em;
  position: relative;
  overflow-x: hidden;
  padding: 5px 10px;
  display: flex;
  align-items: center;
  justify-content: center;
}
header nav a span{
  position: absolute;
  bottom: 10px;
  display: block;
  width: 100%;
  height: 30%;
  transform: translateX(-101%);
  transition: all .4s ease;
}
header nav a:hover span, header nav a:focus span{
  transform: translateX(0);
}
.active-nav span{
  height: 100%;
  z-index: -1;
  transform: translateX(0);
  transition: all .4s ease;
}
header nav a:nth-child(1) span{
  background: var(--blue);
}
header nav a:nth-child(2) span{
  background: var(--red);
}
header nav a:nth-child(3) span{
  background: var(--green);
}

main{
  margin-top: 50px;
  display: grid;
  grid-template-columns: repeat(3, 1fr);
  gap: 30px;
  padding: 220px 180px;
  transform: translateY(-220px);
}
.bloc{
  border-radius: var(--br-30);
  text-decoration: none;
  color: black;
  display: flex;
  flex-direction: column;
  align-items: center;
  position: relative;
  overflow: hidden;
}
.bloc p{
  font-size: 1.6em;
}
.bloc i{
  font-size: 14em;
}
.simple{
  background: var(--red);
  aspect-ratio: 1;
  padding: 40px 30px;
}
.double_w{
  padding: 40px 60px;
}
#works{
  position: absolute;
  top: 400px;
}
#aboutDiv{
  background: var(--blue);
  grid-column: 1 / 3;
}
#cta-contact{
  background: var(--green);
}
#cta-contact i{
  position: relative;
  left: -10px;
  transition: transform .5s ease;
}
#cta-contact:hover i{
  transform: rotate(5deg) translateX(5px);
}
#double_w{
  background-color: var(--purple);
  grid-column: 2 / 4;
}
#double_h{
  background-color: var(--green);
  grid-column: 3;
  grid-row: 4 / 6;
}
.slider{
  grid-column: 1 / 4;
  grid-row: 2;
  aspect-ratio: 3 / 1;
  overflow: hidden;
  border-radius: var(--br-30);
}
.slider .blocs{
  display: flex;
  gap: 30px;
  /* padding: 10px 0; */
  width: 100%;
  height: 100%;
  animation: sliderAnimate 15s linear infinite;
}
.slider:hover .blocs{
  animation-play-state: paused;
}
.slider .blocs .bloc{
  background-size: contain;
  background-repeat: no-repeat;
  background-position: center;
  aspect-ratio: 1;
  min-width: 33%;
}
/* bg img */
.slider .blocs .bloc.ana-esthetik{
  background: var(--red);
  /* background-image: url('../../assets/img/ana-esthetik.png'); */
  background-repeat: no-repeat;
  background-position: center;
  background-size: 90%;
}
.slider .blocs .bloc.yoda{
  /* background-image: url('../../assets/img/yoda.png'); */
  background-size: cover;
}
.slider .blocs .bloc.sharky-wine{
  /* background-image: url('../../assets/img/sharky-wine.png'); */
  background-size: cover;
}
.slider .blocs .bloc.retour-futur{
  /* background-image: url('../../assets/img/retour-futur.png'); */
  background-size: 110%;
}
.slider .blocs .bloc.cant-stop-the-machine{
  background: var(--yellow);
  /* background-image: url('../../assets/img/cant-stop-the-machine.png'); */
  background-repeat: no-repeat;
  background-position: center;
  background-size: 70%;
}

main .bloc{
  background-size: cover;
  background-position: center;
}

main .bloc#axel{
  background: var(--blue);
  /* background-image: url('../../assets/logo/logo.svg');
  background-position: center;
  background-repeat: no-repeat;
  background-size: 70%; */
}
main .bloc#neonprod{
  background-image: url('../../assets/img/neonprod.png');
}
main .bloc#safe{
  background-image: url('../../assets/img/safe.png');
}
main .bloc#webdocu{
  background-image: url('../../assets/img/webdocu.png');
}
main .bloc#votevote{
  background-image: url('../../assets/img/votevote.png');
}

@keyframes logoColor2{
  0%, 33%, 100%{
    fill: var(--blue);
  }
  34%, 66%{
    fill: var(--green);
  }
  67%, 99%{
    fill: var(--yellow);
  }
}
@keyframes logoColor4{
  0%, 33%, 100%{
    fill: var(--red);
  }
  34%, 66%{
    fill: var(--orange);
  }
  67%, 99%{
    fill: var(--purple);
  }
}
@keyframes navHoverAnimate{
  from{
    transform: translateX(-100%);
  }
  to{
    transform: translateX(0);
  }
}
@keyframes sliderAnimate{
  from{
    transform: translateX(0);
  }
  to{
    transform: translateX(calc(-166% - 140px));
  }
}